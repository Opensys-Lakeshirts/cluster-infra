apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 61.9.0
    helm:
      skipCrds: false
      values: |
        # Prometheus Configuration
        prometheus:
          enabled: true
          prometheusSpec:
            image:
              registry: quay.io
              repository: prometheus/prometheus
              tag: v2.53.1
              pullPolicy: IfNotPresent
            retention: 15d
            retentionSize: 15GB
            replicas: 1
            shards: 1
            resources:
              requests:
                memory: "2Gi"
                cpu: "1000m"
              limits:
                memory: "4Gi"
                cpu: "2000m"
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: local-path
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 50Gi
            enableOTLPReceiver: false
            enableRemoteWriteReceiver: false
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            ruleSelectorNilUsesHelmValues: false
          service:
            type: NodePort
            nodePort: 30090
            port: 9090
        
        # Alertmanager Configuration
        alertmanager:
          enabled: true
          alertmanagerSpec:
            replicas: 1
            retention: 120h
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: local-path
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 2Gi
          service:
            type: NodePort
            nodePort: 30093
            port: 9093
        
        # Grafana Configuration
        grafana:
          enabled: true
          adminPassword: "admin123"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          persistence:
            enabled: true
            size: 10Gi
            storageClassName: local-path
            accessModes: ["ReadWriteOnce"]
          service:
            type: NodePort
            nodePort: 30080
            port: 80
          plugins:
            - grafana-piechart-panel
          defaultDashboardsEnabled: true
          grafana.ini:
            analytics:
              check_for_updates: false
            log:
              mode: console
        
        # Prometheus Node Exporter
        prometheus-node-exporter:
          enabled: true
          resources:
            requests:
              memory: "30Mi"
              cpu: "100m"
            limits:
              memory: "50Mi"
              cpu: "200m"
          hostRootFsMount:
            enabled: true
            mountPropagation: HostToContainer
          extraArgs:
            - --path.rootfs=/host/root
            - --web.listen-address=[$(HOST_IP)]:9100
          service:
            port: 9100
            targetPort: 9100
        
        # Kube State Metrics
        kube-state-metrics:
          enabled: true
          resources:
            requests:
              memory: "64Mi"
              cpu: "10m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          prometheus:
            monitor:
              enabled: true
        
        # Prometheus Operator - CRITICAL SECTION
        prometheusOperator:
          enabled: true
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          configReloaderResources:
            requests:
              memory: "25Mi"
              cpu: "10m"
            limits:
              memory: "50Mi"
              cpu: "50m"
          prometheusConfigReloaderResources:
            requests:
              memory: "25Mi"
              cpu: "10m"
            limits:
              memory: "50Mi"
              cpu: "50m"
          logLevel: info
          logFormat: logfmt
          admissionWebhooks:
            enabled: false
          tls:
            enabled: false
          serviceAccount:
            create: true
        
        # Disable problematic components
        kubeApiServer:
          enabled: true
        kubelet:
          enabled: true
        kubeControllerManager:
          enabled: false
        coreDns:
          enabled: true
        kubeEtcd:
          enabled: false
        kubeScheduler:
          enabled: false
        kubeProxy:
          enabled: false
        
        # Global settings
        global:
          rbac:
            create: true
            pspEnabled: false
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - SkipDryRunOnMissingResource=true
