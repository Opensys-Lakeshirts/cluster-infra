apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-admin-setup
  namespace: vault
data:
  setup-admin.sh: |
    #!/bin/sh
    export VAULT_ADDR=http://vault:8200
    
    # Wait for vault to be ready
    echo "Waiting for Vault to be ready..."
    until vault status >/dev/null 2>&1; do
      echo "Vault not ready, waiting 10 seconds..."
      sleep 10
    done
    
    echo "Creating admin policy..."
    vault policy write admin - <<EOF
    path "*" {
      capabilities = ["create", "read", "update", "delete", "list", "sudo"]
    }
    EOF
    
    echo "Enabling userpass auth method..."
    vault auth enable userpass 2>/dev/null || echo "Userpass auth already enabled"
    
    echo "Creating admin user..."
    vault write auth/userpass/users/admin \
      password=admin123 \
      policies=admin
    
    echo "Admin setup completed successfully!"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-admin-setup
  namespace: vault
spec:
  template:
    spec:
      containers:
      - name: vault-setup
        image: vault:1.17.2
        command: ["/bin/sh", "/scripts/setup-admin.sh"]
        env:
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: vault-root-token
              key: token
        volumeMounts:
        - name: setup-script
          mountPath: /scripts
      volumes:
      - name: setup-script
        configMap:
          name: vault-admin-setup
          defaultMode: 0755
      restartPolicy: OnFailure
  backoffLimit: 3
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-root-token
  namespace: vault
type: Opaque
data:
  # Replace 'your-root-token-here' with your actual base64 encoded root token
  # echo -n "your-actual-root-token" | base64
  token: aHZzLlpJTDA3Nk1iYlFpdnhQVURsNjRCZFJWMQ==
